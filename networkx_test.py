# -*- coding: utf-8 -*-
"""NetworkX.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hqt3m1EixrH2a3w3H6VupvetZkyW9AYR
"""

import networkx as nx
import matplotlib.pyplot as plt

#创建空白图
G = nx.Graph()
#添加边
for e in [(1,2),(1,3),(1,4),(2,3),(3,4),(5,4),(7,3)]:
  G.add_edge(*e)
  
#可视化图
nx.draw(G)
plt.show()

##查看图属性
#节点数量
print(G.number_of_nodes())
#边数量
print(G.number_of_edges())
#返回所有节点
print(G.nodes())
#返回所有边
print(G.edges())
#返回与某一节点之间有边连接的所有连接的节点
print(G.neighbors(2))

#移除节点
G.remove_node(7)
print(G.edges())
#移除边
G.remove_edge(1,3)
print(G.edges())

#为图中的元素添加属性
G.graph['day'] = 'Monday'
print(G.graph)
#给节点1增加名为name的属性
G.node[1]['name']='jilu'
print(G.node(data=True))

#创建图时为图中的元素添加属性
G.add_edge(7,8,weight = 4.7)
#从列表中批量添加边
G.add_edges_from([(3,8),(4,5)],color = 'red')
G.add_edges_from([(9,1,{'color':'blue'}),(8,3,{'weight':8})])
#修改权重属性值
G[1][2]['weight']=4.0
#G.edge[1][2]['weight'] = 7
print(G.edges(data=True))

#有向图
DG = nx.DiGraph()
DG.add_weighted_edges_from([(1,2,0.5),(3,1,0.75)])

#节点度数/出度/入度
print(DG.degree(1))
print(DG.out_degree(1))
print(DG.in_degree(1))

#构建图以及图的操作
#通过文件创建图，NetworkX支持很多种图的文本格式，包括边列表、邻接列表、GML、GraphML、pickle、LEDA等
G = nx.Graph()
for e in [(1,2),(1,3),(1,4),(2,3),(3,4),(5,4),(7,3)]:
  G.add_edge(*e)

nx.write_edgelist(G,'graph_edges')

G1 = nx.read_edgelist('graph_edges')
print(G1.edges())

#划分/合并操作
print(G)
#划分子图
SG1 = nx.subgraph(G,[1,2,3])
SG2 = nx.subgraph(G,[4,5,7])
print(SG1.edges())
print(SG2.edges())
#合并子图
print(nx.union(SG1,SG2).edges())

#补图 complement()
#有向图转为无向图 convert_to_undirected()

